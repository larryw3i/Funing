


import cv2
import numpy as np
import os
import shutil


haar_face_path = os.path.join(cv2.haarcascades , "haarcascade_frontalface_default.xml" )

def generator():
    name=input('my name:')
    path=os.path.join("faces",name)
    if os.path.isdir(path):
        shutil.rmtree(path)
    os.mkdir(path)
    face_casecade=cv2.CascadeClassifier( haar_face_path )
    camera=cv2.VideoCapture(0)
    ## cv2.namedWindow('Dynamic')
    count=1
    
    while(True):
        ret,frame=camera.read()
        if ret:
            gray_img=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
            face=face_casecade.detectMultiScale(gray_img,1.3,5)
            for (x,y,w,h) in face:
                cv2.rectangle(frame,(x,y),(x+w,y+h),(0,0,255),2)
                new_frame=cv2.resize(frame[y:y+h,x:x+w],(92,112))
                cv2.imwrite('%s/%s.png'%(path,str(count)),new_frame)
                count+=1
                
            if count > 5: break
                    
            cv2.imshow('Dynamic',frame)
            if cv2.waitKey(100) & 0xff==ord('q'):
                break
    camera.release()
    cv2.destroyAllWindows()

def LoadImages():
    images=[]
    names=[]
    labels=[]
    
    label=0
    
    for subdir in os.listdir("faces/"):
        subpath=os.path.join("faces",subdir)
        #print('path',subpath)
        if os.path.isdir(subpath):
            names.append(subdir)
            for filename in os.listdir(subpath):
                imgpath=os.path.join(subpath,filename)
                img=cv2.imread(imgpath,cv2.IMREAD_COLOR)
                gray_img=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
                #cv2.imshow('1',img)
                #cv2.waitKey(0)
                images.append(gray_img)
                labels.append(label)
            label+=1
    images=np.asarray(images)
    #names=np.asarray(names)
    labels=np.asarray(labels)
    return images,labels,names
        
def FaceRec():
    images,labels,names=LoadImages()
    #print('x',X)
    model=cv2.face.EigenFaceRecognizer_create()
    model.train(images,labels)
    
    camera=cv2.VideoCapture(0)
    camera.set(cv2.CAP_PROP_FPS, 20)
    

    cv2.namedWindow('Dynamic')
    
    face_casecade=cv2.CascadeClassifier( haar_face_path )    
    
    while(True):
        ret,frame=camera.read()
        #print('ret',ret)
        if ret:
            gray_img=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)

            faces=face_casecade.detectMultiScale(gray_img,1.3,5)
            
            for (x,y,w,h) in faces:
                frame=cv2.rectangle(frame,(x,y),(x+w,y+h),(255,0,0),2)  
                roi_gray=gray_img[y:y+h,x:x+w]
                
                try:
                    roi_gray=cv2.resize(roi_gray,(92,112),interpolation=cv2.INTER_LINEAR)
                    params=model.predict(roi_gray)
                    cv2.putText(frame,names[params[0]],(x,y-20),cv2.FONT_HERSHEY_SIMPLEX,1,255,2)
                    

                except:
                    continue
                
            cv2.imshow('Dynamic',frame)
                
            if cv2.waitKey(100) & 0xff==ord('q'):
                break
    camera.release()
    cv2.destroyAllWindows()

    